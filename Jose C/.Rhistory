Pob_Total$personas <- a
library(readxl)
Pob <- read_excel("variacion_poblacion.xlsx",
sheet = "Variacion")
Pob_Total <- Pob[Pob$Tipo=="Total",]
a <- diff(Pob_Total$personas)/Pob_Total$personas[1:24]
Pob_Total <- Pob_Total[2:25,]
Pob_Total$personas <- a
colnames(Pob_Total)[2] <- "Cambio Porcentual"
variacion_total_porcentual <- Pob[Pob$Tipo=="Total",]
cambio <- diff(variacion_total_porcentual$personas)/variacion_total_porcentual$personas[1:24]
variacion_total_porcentual <- variacion_total_porcentual[2:25,]
variacion_total_porcentual$personas <- cambio
colnames(variacion_total_porcentual)[2] <- "Cambio Porcentual"
View(Pob_Total)
library(readxl)
poblacion <- read_excel("variacion_poblacionlacion.xlsx",
sheet = "Variacion")
setwd("/Users/joseandres/Desktop/Pensiones/Pensions/Jose C")
setwd("/Users/joseandres/Desktop/Pensiones/Pensions/Jose C")
library(readxl)
poblacion <- read_excel("variacion_poblacion.xlsx",
sheet = "Variacion")
variacion_total_porcentual <- poblacion[poblacion$Tipo=="Total",]
cambio <- diff(variacion_total_porcentual$personas)/variacion_total_porcentual$personas[1:24]
variacion_total_porcentual <- variacion_total_porcentual[2:25,]
variacion_total_porcentual$personas <- cambio
colnames(variacion_total_porcentual)[2] <- "Cambio Porcentual"
ggplot(data = variacion_total_porcentual,mapping = aes(x=Año,y=`Cambio Porcentual`*100))+geom_line(color="#668B8B",size=1.5)+
scale_y_continuous(labels = scales::percent_format(scale = 1))+
theme_minimal_hgrid(font_size=15)+
labs(y = "Cambio porcentual",
x = "Período")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom")
ggplot(data = variacion_total_porcentual,mapping = aes(x=Año,y=`Cambio Porcentual`*100))+geom_line(color="#668B8B",size=1.5)+
scale_y_continuous(labels = scales::percent_format(scale = 1))+
theme_minimal_grid(font_size=15)+
labs(y = "Cambio porcentual",
x = "Período")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom")
ggplot(data = variacion_total_porcentual,mapping = aes(x=Año,y=`Cambio Porcentual`*100))+geom_line(color="#668B8B",size=1.5)+
scale_y_continuous(labels = scales::percent_format(scale = 1))+
labs(y = "Cambio porcentual",
x = "Período")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom")
View(poblacion)
setwd("/Users/joseandres/Desktop/Pensiones/Pensions/Jose C")
library(readxl)
poblacion <- read_excel("variacion_poblacion.xlsx",
sheet = "Variacion")
variacion_total_porcentual <- poblacion %>% filter(tipo=="Total")
library(tidyverse)
library(readxl)
poblacion <- read_excel("variacion_poblacion.xlsx",
sheet = "Variacion")
variacion_total_porcentual <- poblacion %>% filter(tipo=="Total")
poblacion
setwd("/Users/joseandres/Desktop/Pensiones/Pensions/Jose C")
library(tidyverse)
library(readxl)
poblacion <- read_excel("variacion_poblacion.xlsx",
sheet = "Variacion")
variacion_total_porcentual <- poblacion %>% filter(Tipo=="Total")
cambio <- diff(variacion_total_porcentual$personas)/variacion_total_porcentual$personas[1:24]
variacion_total_porcentual <- variacion_total_porcentual[2:25,]
variacion_total_porcentual$personas <- cambio
colnames(variacion_total_porcentual)[2] <- "Cambio Porcentual"
ggplot(data = variacion_total_porcentual,mapping = aes(x=Año,y=`Cambio Porcentual`*100))+geom_line(color="#668B8B",size=1.5)+
scale_y_continuous(labels = scales::percent_format(scale = 1))+
labs(y = "Cambio porcentual",
x = "Período")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom")
ggplot(data = variacion_total_porcentual,mapping = aes(x=Año,y=`Cambio Porcentual`*100))+geom_line(color="darkblue",size=1.5)+
scale_y_continuous(labels = scales::percent_format(scale = 1))+
labs(y = "Cambio porcentual",
x = "Período")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom")
ggplot(data = variacion_total_porcentual,mapping = aes(x=Año,y=`Cambio Porcentual`*100))+geom_line(color="darkblue",size=1.5)+
scale_y_continuous(labels = scales::percent_format(scale = 1))+
labs(y = "Cambio porcentual",
x = "Año")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom")
grafico_cambio_poblacional <- ggplot(data = variacion_total_porcentual,mapping = aes(x=Año,y=`Cambio Porcentual`*100))+
geom_line(color="darkblue",size=1.5)+
scale_y_continuous(labels = scales::percent_format(scale = 1))+
labs(y = "Cambio porcentual",
x = "Año")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom")
ggsave(filename = "Cambio_Poblacional.pdf",plot = grafico_cambio_poblacional)
grafico_cambio_poblacional <- ggplot(data = variacion_total_porcentual,mapping = aes(x=Año,y=`Cambio Porcentual`*100))+
geom_line(color="darkblue",size=1.5)+
scale_y_continuous(labels = scales::percent_format(scale = 1))+
labs(y = "Cambio porcentual",
x = "Año")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom") +theme_minimal()
ggplot(data = variacion_total_porcentual,mapping = aes(x=Año,y=`Cambio Porcentual`*100))+
geom_line(color="darkblue",size=1.5)+
scale_y_continuous(labels = scales::percent_format(scale = 1))+
labs(y = "Cambio porcentual",
x = "Año")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom") +theme_minimal()
grafico_cambio_poblacional <- ggplot(data = variacion_total_porcentual,mapping = aes(x=Año,y=`Cambio Porcentual`*100))+
geom_line(color="darkblue",size=1.5)+
scale_y_continuous(labels = scales::percent_format(scale = 1))+
labs(y = "Cambio porcentual",
x = "Año")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom") +theme_minimal()
ggsave(filename = "Cambio_Poblacional.pdf",plot = grafico_cambio_poblacional)
ggplot(data = proyeccion,mapping = aes(x=Año,y=personas,color=Tipo))+
geom_line(size=1.5)+
scale_y_continuous(labels = scales::percent_format(scale = 1))+
labs(y = "Cambio porcentual",
x = "Año")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom") +theme_minimal()
proyeccion <- read_excel("variacion_poblacion.xlsx",
sheet = "proyeccion")
ggplot(data = proyeccion,mapping = aes(x=Año,y=personas,color=Tipo))+
geom_line(size=1.5)+
scale_y_continuous(labels = scales::percent_format(scale = 1))+
labs(y = "Cambio porcentual",
x = "Año")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom") +theme_minimal()
ggplot(data = proyeccion,mapping = aes(x=Año,y=personas,color=Tipo))+
geom_line(size=1.5)+
labs(y = "Cambio porcentual",
x = "Año")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom") +theme_minimal()
ggplot(data = proyeccion,mapping = aes(x=Año,y=personas/1000000,color=Tipo))+
geom_line(size=1.5)+
labs(y = "Cambio porcentual",
x = "Año")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom") +theme_minimal()
proyeccion <- read_excel("variacion_poblacion.xlsx",
sheet = "proyeccion")
proyeccion <- read_excel("variacion_poblacion.xlsx",
sheet = "proyeccion")
View(proyeccion)
df_mod <- df %>%
mutate(
GrupoEdad = case_when(
str_detect(Total, "^[0-1]?[0-9]") ~ "0-19",           # 0-4 hasta 15-19
str_detect(Total, "^2[0-9]|^3[0-9]|^4[0-9]|^5[0-9]|^6[0-4]") ~ "20-64", # 20-24 hasta 60-64
str_detect(Total, "^6[5-9]|^7[0-9]|^8[0-9]|^9[0-9]|100") ~ "65+",      # 65+ en adelante
TRUE ~ NA_character_
)
) %>%
pivot_longer(
cols = -c(Total, GrupoEdad),
names_to = "Año",
values_to = "Cantidad"
) %>%
mutate(
Año = as.integer(Año),
Cantidad = as.numeric(gsub(",", "", Cantidad))
)
df_mod <- proyeccion %>%
filter(Total != "Total") %>%  # Eliminar la fila de totales
mutate(
GrupoEdad = case_when(
str_detect(Total, "^[0-1]?[0-9]") ~ "0-19",  # Ej: 0-4, 10-14, 15-19
str_detect(Total, "^2[0-9]|^3[0-9]|^4[0-9]|^5[0-9]|^6[0-4]") ~ "20-64",  # Ej: 20-24 hasta 60-64
str_detect(Total, "^6[5-9]|^7[0-9]|^8[0-9]|^9[0-9]|^100") ~ "65+",  # Ej: 65+ en adelante
TRUE ~ NA_character_
)
) %>%
pivot_longer(
cols = -c(Total, GrupoEdad),
names_to = "Año",
values_to = "Cantidad"
) %>%
mutate(
Año = as.integer(Año),
Cantidad = as.numeric(gsub(",", "", Cantidad))
)
df_mod
df_mod <- proyeccion %>%
filter(Total != "Total") %>%  # Quitar posible fila de totales si existe
mutate(
GrupoEdad = case_when(
str_detect(Total, "^[0-1]?[0-9]") ~ "0-19",
str_detect(Total, "^2[0-9]|^3[0-9]|^4[0-9]|^5[0-9]|^6[0-4]") ~ "20-64",
str_detect(Total, "^6[5-9]|^7[0-9]|^8[0-9]|^9[0-9]|^100") ~ "65+",
TRUE ~ NA_character_
)
) %>%
select(-Total) %>%  # ❌ Eliminar la columna de rangos de edad
pivot_longer(
cols = -GrupoEdad,
names_to = "Año",
values_to = "Cantidad"
) %>%
mutate(
Año = as.integer(Año),
Cantidad = as.numeric(gsub(",", "", Cantidad))
)
df_mod <- proyeccion %>%
filter(Total != "Total") %>%  # Quitar posible fila de totales si existe
mutate(
GrupoEdad = case_when(
str_detect(Total, "^[0-1]?[0-9]") ~ "0-19",
str_detect(Total, "^2[0-9]|^3[0-9]|^4[0-9]|^5[0-9]|^6[0-4]") ~ "20-64",
str_detect(Total, "^6[5-9]|^7[0-9]|^8[0-9]|^9[0-9]|^100") ~ "65+",
TRUE ~ NA_character_
)
) %>%
select(-Total) %>%
pivot_longer(
cols = -GrupoEdad,
names_to = "Año",
values_to = "Cantidad"
) %>%
mutate(
Año = as.integer(Año),
Cantidad = as.numeric(gsub(",", "", Cantidad))
)
df_mod <- proyeccion %>%
filter(Total != "Total") %>%  # Quitar posible fila de totales si existe
mutate(
GrupoEdad = case_when(
str_detect(Total, "^[0-1]?[0-9]") ~ "0-19",
str_detect(Total, "^2[0-9]|^3[0-9]|^4[0-9]|^5[0-9]|^6[0-4]") ~ "20-64",
str_detect(Total, "^6[5-9]|^7[0-9]|^8[0-9]|^9[0-9]|^100") ~ "65+",
TRUE ~ NA_character_
)
) %>%
select(-Total) %>%
pivot_longer(
cols = -GrupoEdad,
names_to = "Año",
values_to = "Cantidad"
) %>%
mutate(
Año =Año,
Cantidad = as.numeric(gsub(",", "", Cantidad))
)
df_mod
View(df_mod)
df_mod <- proyeccion %>%
filter(Total != "Total") %>%
mutate(
GrupoEdad = case_when(
str_detect(Total, "^[0-1]?[0-9]") ~ "0-19",
str_detect(Total, "^2[0-9]|^3[0-9]|^4[0-9]|^5[0-9]|^6[0-4]") ~ "20-64",
str_detect(Total, "^6[5-9]|^7[0-9]|^8[0-9]|^9[0-9]|^100") ~ "65+",
TRUE ~ NA_character_
)
) %>%
select(-Total) %>%
pivot_longer(
cols = -GrupoEdad,
names_to = "Año",
values_to = "Cantidad"
) %>%
mutate(
Año = as.integer(str_extract(Año, "\\d{4}")),  # ✅ Extraer solo el año (ej. "2022" de "2022a\\")
Cantidad = as.numeric(gsub(",", "", Cantidad))
)
df_mod
View(df_mod)
df_mod %>% arrange_by(GrupoEdad,Año) %>% View()
df_mod %>% arrange(GrupoEdad,Año) %>% View()
df_mod <- proyeccion %>%
filter(Total != "Total") %>%
mutate(
GrupoEdad = case_when(
str_detect(Total, "^[0-1]?[0-9]") ~ "0-19",
str_detect(Total, "^2[0-9]|^3[0-9]|^4[0-9]|^5[0-9]|^6[0-4]") ~ "20-64",
str_detect(Total, "^6[5-9]|^7[0-9]|^8[0-9]|^9[0-9]|^100") ~ "65+",
TRUE ~ NA_character_
)
) %>% group_by(GrupoEdad) %>% summarise_all(sum())
df_mod
df_mod <- proyeccion %>%
filter(Total != "Total") %>%
mutate(
GrupoEdad = case_when(
str_detect(Total, "^[0-1]?[0-9]") ~ "0-19",
str_detect(Total, "^2[0-9]|^3[0-9]|^4[0-9]|^5[0-9]|^6[0-4]") ~ "20-64",
str_detect(Total, "^6[5-9]|^7[0-9]|^8[0-9]|^9[0-9]|^100") ~ "65+",
TRUE ~ NA_character_
)
) %>% group_by(GrupoEdad) %>% summarise_all(sum())
df_mod <- proyeccion %>%
filter(Total != "Total") %>%
mutate(
GrupoEdad = case_when(
str_detect(Total, "^[0-1]?[0-9]") ~ "0-19",
str_detect(Total, "^2[0-9]|^3[0-9]|^4[0-9]|^5[0-9]|^6[0-4]") ~ "20-64",
str_detect(Total, "^6[5-9]|^7[0-9]|^8[0-9]|^9[0-9]|^100") ~ "65+",
TRUE ~ NA_character_
)
)  select(-Total) %>%
df_mod <- proyeccion %>%
filter(Total != "Total") %>%
mutate(
GrupoEdad = case_when(
str_detect(Total, "^[0-1]?[0-9]") ~ "0-19",
str_detect(Total, "^2[0-9]|^3[0-9]|^4[0-9]|^5[0-9]|^6[0-4]") ~ "20-64",
str_detect(Total, "^6[5-9]|^7[0-9]|^8[0-9]|^9[0-9]|^100") ~ "65+",
TRUE ~ NA_character_
)
) %>%  select(-Total) %>%
group_by(GrupoEdad) %>%
summarise(across(everything(), ~ sum(as.numeric(gsub(",", "", .)), na.rm = TRUE)))
df_mod
View(df_mod)
df_mod <- proyeccion %>%
mutate(
GrupoEdad = case_when(
str_detect(Total, "^[0-1]?[0-9]") ~ "0-19",
str_detect(Total, "^2[0-9]|^3[0-9]|^4[0-9]|^5[0-9]|^6[0-4]") ~ "20-64",
str_detect(Total, "^6[5-9]|^7[0-9]|^8[0-9]|^9[0-9]|^100") ~ "65+",
TRUE ~ NA_character_
)
) %>%
select(-Total) %>%
group_by(GrupoEdad) %>%
summarise(across(everything(), ~ sum(as.numeric(gsub(",", "", .)), na.rm = TRUE)))
df_mod
proyeccion <- read_excel("variacion_poblacion.xlsx",
sheet = "proyeccion")
df_mod <- proyeccion %>%
mutate(
GrupoEdad = case_when(
str_detect(Total, "^[0-1]?[0-9]") ~ "0-19",
str_detect(Total, "^2[0-9]|^3[0-9]|^4[0-9]|^5[0-9]|^6[0-4]") ~ "20-64",
str_detect(Total, "^6[5-9]|^7[0-9]|^8[0-9]|^9[0-9]|^100") ~ "65+",
TRUE ~ NA_character_
)
) %>%
select(-Total) %>%
group_by(GrupoEdad) %>%
summarise(across(everything(), ~ sum(as.numeric(gsub(",", "", .)), na.rm = TRUE)))
View(df_mod)
proyeccion %>%
mutate(GrupoEdad = case_when(
str_detect(Total, "^[0-1]?[0-9]") ~ "0-19",
str_detect(Total, "^2[0-9]|^3[0-9]|^4[0-9]|^5[0-9]|^6[0-4]") ~ "20-64",
str_detect(Total, "^6[5-9]|^7[0-9]|^8[0-9]|^9[0-9]|^100") ~ "65+",
TRUE ~ NA_character_
)) %>%
count(GrupoEdad)
proyeccion$Total %>% unique()
df_mod <- proyeccion %>%
# Extraemos el primer número como valor numérico
mutate(edad_inicio = as.numeric(str_extract(Total, "^\\d+"))) %>%
mutate(
GrupoEdad = case_when(
edad_inicio <= 19 ~ "0-19",
edad_inicio >= 20 & edad_inicio <= 64 ~ "20-64",
edad_inicio >= 65 ~ "65+",
TRUE ~ NA_character_
)
) %>%
select(-Total, -edad_inicio) %>%
group_by(GrupoEdad) %>%
summarise(across(everything(), ~ sum(as.numeric(gsub("[^0-9.]", "", .)), na.rm = TRUE)))
df_mod$GrupoEdad %>% count()
df_mod
df_mod %>% arrange(GrupoEdad,Año) %>% View()
df_final_proyeccion <- df_mod %>%
pivot_longer(
cols = -GrupoEdad,        # Todas las columnas excepto GrupoEdad se pivotearán
names_to = "Año",         # El nombre de la columna que contendrá el nombre original (año)
values_to = "Cantidad"    # La columna con los valores (la cantidad de personas)
) %>%
mutate(
Año = as.integer(str_extract(Año, "\\d{4}"))  # Extraer el año, ej. "2022" de "2022a"
)
df_final_proyeccion
View(df_final_proyeccion)
df_final_proyeccion
ggplot(data = df_final_proyeccion,mapping = aes(x=Año,y=Cantidad/1000000,color=GrupoEdAD))+
geom_line(size=1.5)+
labs(y = "Cantidad de personas (En millones)",
x = "Año")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom") +theme_minimal()
ggplot(data = df_final_proyeccion,mapping = aes(x=Año,y=Cantidad/1000000,color=GrupoEdad))+
geom_line(size=1.5)+
labs(y = "Cantidad de personas (En millones)",
x = "Año")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom") +theme_minimal()
df_final_proyeccion <- df_mod %>%
pivot_longer(
cols = -GrupoEdad,        # Todas las columnas excepto GrupoEdad se pivotearán
names_to = "Año",         # El nombre de la columna que contendrá el nombre original (año)
values_to = "Cantidad"    # La columna con los valores (la cantidad de personas)
) %>%
mutate(
Año = as.integer(str_extract(Año, "\\d{4}"))  # Extraer el año, ej. "2022" de "2022a"
) %>% filter(Año<2050)
ggplot(data = df_final_proyeccion,mapping = aes(x=Año,y=Cantidad/1000000,color=GrupoEdad))+
geom_line(size=1.5)+
labs(y = "Cantidad de personas (En millones)",
x = "Año")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom") +theme_minimal()
ggsave(filename = "Cambio_Poblacional.pdf",plot = grafico_cambio_poblacional)
df_final_proyeccion <- df_mod %>%
pivot_longer(
cols = -GrupoEdad,        # Todas las columnas excepto GrupoEdad se pivotearán
names_to = "Año",         # El nombre de la columna que contendrá el nombre original (año)
values_to = "Cantidad"    # La columna con los valores (la cantidad de personas)
) %>%
mutate(
Año = as.integer(str_extract(Año, "\\d{4}"))  # Extraer el año, ej. "2022" de "2022a"
)
df_final_proyeccion <- df_mod %>%
pivot_longer(
cols = -GrupoEdad,        # Todas las columnas excepto GrupoEdad se pivotearán
names_to = "Año",         # El nombre de la columna que contendrá el nombre original (año)
values_to = "Cantidad"    # La columna con los valores (la cantidad de personas)
) %>%
mutate(
Año = as.integer(str_extract(Año, "\\d{4}"))  # Extraer el año, ej. "2022" de "2022a"
)
ggplot(data = df_final_proyeccion,mapping = aes(x=Año,y=Cantidad/1000000,color=GrupoEdad))+
geom_line(size=1.5)+
labs(y = "Cantidad de personas (En millones)",
x = "Año")+
theme(axis.title.y = element_text(vjust=-0.5,size=rel(1), angle = 90),
legend.position = "bottom") +theme_minimal()
ggsave(filename = "Cambio_Poblacional.pdf",plot = grafico_cambio_poblacional)
ggplot(data = df_final_proyeccion, mapping = aes(x = Año, y = Cantidad/1000000, color = GrupoEdad)) +
geom_line(size = 1.5) +
scale_color_manual(values = c("0-19" = "darkblue", "20-64" = "darkred", "65+" = "skyblue")) +
labs(
y = "Cantidad de personas (En millones)",
x = "Año"
) +
theme(
axis.title.y = element_text(vjust = -0.5, size = rel(1), angle = 90),
legend.position = "bottom"
) +
theme_minimal()
ggplot(data = df_final_proyeccion, mapping = aes(x = Año, y = Cantidad/1000000, color = GrupoEdad)) +
geom_line(size = 1.5) +
scale_color_manual(values = c("0-19" = "darkblue", "20-64" = "darkred2", "65+" = "skyblue")) +
labs(
y = "Cantidad de personas (En millones)",
x = "Año"
) +
theme(
axis.title.y = element_text(vjust = -0.5, size = rel(1), angle = 90),
legend.position = "bottom"
) +
theme_minimal()
ggplot(data = df_final_proyeccion, mapping = aes(x = Año, y = Cantidad/1000000, color = GrupoEdad)) +
geom_line(size = 1.5) +
scale_color_manual(values = c("0-19" = "darkblue", "20-64" = "red", "65+" = "skyblue")) +
labs(
y = "Cantidad de personas (En millones)",
x = "Año"
) +
theme(
axis.title.y = element_text(vjust = -0.5, size = rel(1), angle = 90),
legend.position = "bottom"
) +
theme_minimal()
ggplot(data = df_final_proyeccion, mapping = aes(x = Año, y = Cantidad/1000000, color = GrupoEdad)) +
geom_line(size = 1.5) +
scale_color_manual(values = c("0-19" = "darkblue", "20-64" = "brown2", "65+" = "skyblue")) +
labs(
y = "Cantidad de personas (En millones)",
x = "Año"
) +
theme(
axis.title.y = element_text(vjust = -0.5, size = rel(1), angle = 90),
legend.position = "bottom"
) +
theme_minimal()
ggplot(data = df_final_proyeccion, mapping = aes(x = Año, y = Cantidad/1000000, color = GrupoEdad)) +
geom_line(size = 1.5) +
scale_color_manual(values = c("0-19" = "darkblue", "20-64" = "brown3", "65+" = "skyblue")) +
labs(
y = "Cantidad de personas (En millones)",
x = "Año"
) +
theme(
axis.title.y = element_text(vjust = -0.5, size = rel(1), angle = 90),
legend.position = "bottom"
) +
theme_minimal()
g_proyeccion_poblacional <- ggplot(data = df_final_proyeccion, mapping = aes(x = Año, y = Cantidad/1000000, color = GrupoEdad)) +
geom_line(size = 1.5) +
scale_color_manual(values = c("0-19" = "darkblue", "20-64" = "brown3", "65+" = "skyblue")) +
labs(
y = "Cantidad de personas (En millones)",
x = "Año"
) +
theme(
axis.title.y = element_text(vjust = -0.5, size = rel(1), angle = 90),
legend.position = "bottom"
) +
theme_minimal()
ggsave(filename = "Proyeccion_Poblacional.pdf",plot = g_proyeccion_poblacional)
